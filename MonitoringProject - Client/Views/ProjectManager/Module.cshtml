@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "DashboardLayout";
}
<h1> Module List</h1>

<div>
    <button type="button" class="btn btn-primary" id="btnAddMember" style="margin: auto" data-toggle="modal" data-target="#modalAddMember" data-placement="top" title="Add Project Member" onclick=""><i class="fa fa-user-plus" aria-hidden="true"></i></button>
    <button type="button" class="btn btn-success" id="btnAddModule" style="margin: auto" data-toggle="modal" data-target="#modalAddModule" data-placement="top" title="Add Project Module" onclick=""><i class="fa fa-plus" aria-hidden="true"></i></button>
    <button class="popup btn btn-success" data-toggle="tooltip" data-placement="top" title="Mark Project Finished" id="btnDone" onclick="Done()"><i class="fa fa-check"></i></button>
</div>

<div class="p-3">
    <table id="tbl_project_module" class="display">
        <thead>
            <tr>
                <th>No</th>
                <th>Module Name</th>
                <th>Start Date</th>
                <th>Deadline</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
    </table>
</div>

<div id="ModuleChart"></div>

@*modal Add Module*@
<div class="modal" id="modalAddModule">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h2 class="modal-title">Add Project Module</h2>
            </div>
            <!-- Modal body -->
            <form class="needs-validation" id="AddModuleForm" novalidate>
                <div class="modal-body">
                    <div class="form-group">
                        <div class="col-md-12">
                            <label for="name" class="col-form-label"> Module Name</label>
                            <input type="text" class="form-control" id="module_name" name="module_name" placeholder="Enter Name" required>
                        </div>
                        <div class="invalid-feedback">
                            Please input your project module name.
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <label for="moduledescription" class="col-form-label"> Project Module Description</label>
                            <textarea class="form-control" rows="3" id="module_description" name="module_description" placeholder="Description"></textarea>
                        </div>
                        <div class="invalid-feedback">
                            Please input your project module description.
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <label for="startdate" class="col-form-label">Start Date</label>
                            <input type="date" class="form-control" id="module_startdate" name="module_startdate" placeholder="Enter StartDate"  required>
                        </div>
                        <div class="invalid-feedback">
                            Please input your project module startdate.
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <label for="deadline" class="col-form-label">Deadline</label>
                            <input type="date" class="form-control" id="module_deadline" name="module_deadline" placeholder="Enter Deadline" required>
                        </div>
                        <div class="invalid-feedback">
                            Please input your project module deadline.
                        </div>
                    </div>
                    @*<div class="form-group">
                        <div class="col-md-12">
                            <label for="status" class="col-form-label">Status</label>
                            <select class="form-control" id="module_status" name="module_status" required>
                                <option selected>OnProgress</option>
                                <option selected>Finished</option>
                                <option selected>Late</option>
                            </select>
                        </div>
                        <div class="invalid-feedback">
                            Please input your project module deadline.
                        </div>
                    </div>*@
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" id="btnClose" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnSaveModule" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*modal add member*@
<div class="modal" id="modalAddMember">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h2 class="modal-title">Add Project Member</h2>
            </div>
            <!-- Modal body -->
            <form class="needs-validation" id="AddMemberForm" novalidate>
                <div class="modal-body">
                    <div class="form-group">
                        <div class="col-md-12">
                            <label for="name" class="col-form-label"> Project Member</label>
                            <select id="optionmember" name="optionmember" class="form-control" multiple="multiple" style="width: 100%" required>
                            </select>
                        </div>
                        <div class="invalid-feedback">
                            Please input your project member.
                        </div>
                    </div>
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" id="btnClose" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section script_user{
    
    <script>

        $(document).ready(function () {

            Members()
            Projects()

            $('#AddModuleForm').submit(function (e) {
                e.preventDefault()
                AddModule()
            })

            $('#optionmember').select2({
                width: 'resolve',
                theme: 'classic'
            })

            $('#AddMemberForm').submit(function (e) {
                e.preventDefault()
                AddMember()
            })


            updateChart()
            

        })

        const updateChart = () => {
            var options = {
                chart: {
                    height: 350,
                    type: 'rangeBar',
                },
                dataLabels: {
                    enabled: false
                },
                series: [

                ],
                title: {
                    text: 'Project Plan Timeline',
                },
                noData: {
                    text: 'No Data'
                },
                plotOptions: {
                    bar: {
                        horizontal: true,
                        distributed: true,
                        dataLabels: {
                            hideOverflowingLabels: true
                        }
                    }
                },
                xaxis: {
                    type: 'datetime'
                },
                yaxis: {
                    show: false
                },
                grid: {
                    row: {
                        colors: ['#f3f4f5', '#fff'],
                        opacity: 1
                    }
                }
            }

            var chart = new ApexCharts(
                document.querySelector("#ModuleChart"),
                options
            );

            chart.render();

            $.getJSON('GetModuleChart', function (response) {
                console.log(response);
                chart.updateSeries([{
                    name: 'Plan Data',
                    data: response
                }])
            });
        }

        //table
        let table = $('#tbl_project_module').DataTable({
            ajax: {
                url: `GetModules`,
                dataSrc: ""
            },
            columns: [
                //No
                {
                    "render": (data, type, row, meta) => {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                //Project Name
                { "data": "moduleName" },
                //Start Date
                {
                    "data": "startDate",
                    "render": (startDate) => {
                        let date = moment(startDate)
                        return date.format('DD MMMM YYYY');
                    }
                },
                //Deadline
                {
                    "data": "endDate",
                    "render": (endDate) => {
                        let date = moment(endDate)
                        return date.format('DD MMMM YYYY');
                    }
                },
                //Status
                { "data": "status" },
                //Action
                {
                    'data': 'moduleID',
                    "render": function (id) {
                        return `<button class="popup btn btn-primary" data-toggle="tooltip" data-placement="top" title="Open Project" id="btnOpen" onclick="Task(${id})"><i class= "fa fa-folder-open-o"></i></button> | <button class="popup btn btn-warning" data-toggle="tooltip" data-placement="top" title="Delete Project" id="btnDelete" onclick="Delete(${id})"><i class="fa fa-trash"></i></button> | <button class="popup btn btn-danger" data-toggle="tooltip" data-placement="top" title="Mark Module Late" id="btnLate" onclick="Late(${id})"><i class= "fa fa-flag"></i></button>`;
                    }
                }
            ]
        })

        const Done = () => {
            $.ajax({
                type: "POST",
                url: `MarkProjectFinished`,
                success: (data) => {
                    Swal.fire({
                        text: `Project status changed to "Finished"`,
                        icon: 'success',
                        timer: 10000,
                        timerProgressBar: true
                    });
                    table.ajax.reload()
                },
                error: (data) => {
                    Swal.fire({
                        text: `Error running task`,
                        icon: 'error',
                        timer: 10000,
                        timerProgressBar: true
                    });
                    table.ajax.reload()
                }
            })
        }

        const Late = (id) => {
            $.ajax({
                type: "POST",
                url: `MarkModuleLate/${id}`,
                success: (data) => {
                    Swal.fire({
                        text: `Module status changed to "Late"`,
                        icon: 'success',
                        timer: 10000,
                        timerProgressBar: true
                    });
                    table.ajax.reload()
                    updateChart()
                },
                error: (data) => {
                    Swal.fire({
                        text: `Error running task`,
                        icon: 'error',
                        timer: 10000,
                        timerProgressBar: true
                    });
                    table.ajax.reload()
                }
            })
        }

        const Task = (id) => {
            $.ajax({
                type: "GET",
                url: `GoTask/${id}`,
                success: (data) => {
                    window.location.href = data
                },
                error: (data) => {
                    alert(data)
                }
            })
        }

        const Delete = (id) => {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "DELETE",
                        url: `DeleteModule/${id}`,
                        success: () => {
                            Swal.fire(
                                'Deleted!',
                                'Module has been deleted.',
                                'success'
                            )
                            table.ajax.reload()
                            updateChart()
                        },
                        error: () => {
                            Swal.fire(
                                'Failed!',
                                'Error deleting module.',
                                'error'
                            )
                        }
                    })

                }
            })
        }

        const AddMember = () => {
            //let data = {
            //    userID: $('#optionmember').val()
            //}
            let id = $('#optionmember').val()
            //var data = [
            //    { userID: 1 },
            //    { userID: 2 }
            //];

            //data = JSON.stringify({ 'data': id });
            //alert(userId)
            $.ajax({
                type: "POST",
                url: "AddMember",
                data: JSON.stringify(id),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: (data) => {
                    $('#modalAddMember').modal('hide')
                    if (data == 200) {
                        Swal.fire({
                            text: 'Member Add to project!',
                            icon: 'success',
                            timer: 10000,
                            timerProgressBar: true
                        });
                        table.ajax.reload()
                    } else {
                        Swal.fire({
                            text: `Error adding member! ${data}`,
                            icon: 'error',
                            timer: 10000,
                            timerProgressBar: true
                        });
                    }
                },
                error: (data) => {
                    Swal.fire({
                        text: `Error adding member! ${data}`,
                        icon: 'error',
                        timer: 10000,
                        timerProgressBar: true
                    });
                }
            })
        }

        const AddModule = () => {
            let project = {
                ModuleName: $('#module_name').val(),
                Description: $('#module_description').val(),
                StartDate: $('#module_startdate').val(),
                EndDate: $('#module_deadline').val(),
                Status: "In-Progress"
            }
            console.log(project)
            $.ajax({
                type: "POST",
                url: "AddModule",
                data: project,
                success: (data) => {
                    $('#modalAddModule').modal('hide')
                    if (data == 200) {
                        Swal.fire({
                            text: 'New Project Module created!',
                            icon: 'success',
                            timer: 10000,
                            timerProgressBar: true
                        });
                        table.ajax.reload()
                        updateChart()
                    } else {
                        Swal.fire({
                            text: 'Error creating project module!',
                            icon: 'error',
                            timer: 10000,
                            timerProgressBar: true
                        });
                    }
                },
                error: (data) => {
                    $('#modalAdd').modal('hide')
                    Swal.fire({
                        text: 'Error creating project module!',
                        icon: 'error',
                        timer: 10000,
                        timerProgressBar: true
                    });
                }
            })
        }

        const Members = () => {
            $.ajax({
                type: "GET",
                url: "GetMembers",
                success: (data) => {
                    $('#optionmember').empty()
                    for (let i = 0; i < data.length; i++) {
                        let id = data[i].userID
                        let name = data[i].name

                        $("#optionmember").append("<option value='" + id + "'>" + name + "</option>")
                    }
                }
            })
        }

        const Projects = () => {
            $.ajax({
                type: "GET",
                url: "GetProjectById",
                success: (data) => {

                    console.log(data)
                    
                    let startdate = moment(data.startDate).format('YYYY-MM-DD');
                    let enddate = moment(data.endDate).format('YYYY-MM-DD')
                    $("#module_startdate").attr("min", startdate)
                    $("#module_deadline").attr("min", startdate)
                    $("#module_startdate").attr("max", enddate)
                    $("#module_deadline").attr("max", enddate)
                    //alert(data.startDate + "<->" + data.endDate)
                }
            })
        }
        
    </script>
}